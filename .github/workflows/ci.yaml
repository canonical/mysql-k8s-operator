# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: '53 0 * * *' # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    uses: canonical/data-platform-workflows/.github/workflows/lint.yaml@v4.2.0

  unit-test:
    name: Unit test charm
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run tests
        run: tox run -e unit

  build:
    name: Build charm
    uses: canonical/data-platform-workflows/.github/workflows/build_charms_with_cache.yaml@v4.2.0
    with:
      charmcraft-snap-revision: 1349  # version 2.3.0
    permissions:
      actions: write  # Needed to manage GitHub Actions cache

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        tox-environments:
          - integration-charm
          - integration-database-relation
          - integration-mysql-root
          - integration-replication
          - integration-self-healing
          - integration-tls
          - integration-backups
    name: ${{ matrix.tox-environments }}
    needs:
      - lint
      - unit-test
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
      - name: Download packed charm(s)
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact-name }}
      - name: Select tests
        id: select-tests
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> "$GITHUB_OUTPUT"
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> "$GITHUB_OUTPUT"
          fi
      - name: Run integration tests
        run: tox run -e "${{ matrix.tox-environments }}" -- -m '${{ steps.select-tests.outputs.mark_expression }}'
        env:
          AWS_ACCESS_KEY: ${{ matrix.tox-environments != 'integration-backups' || secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ matrix.tox-environments != 'integration-backups' || secrets.AWS_SECRET_KEY }}
          GCP_ACCESS_KEY: ${{ matrix.tox-environments != 'integration-backups' || secrets.GCP_ACCESS_KEY }}
          GCP_SECRET_KEY: ${{ matrix.tox-environments != 'integration-backups' || secrets.GCP_SECRET_KEY }}
          CI_PACKED_CHARMS: ${{ needs.build.outputs.charms }}
