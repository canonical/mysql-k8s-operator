# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: '53 0 * * *'  # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:
    outputs:
      artifact-prefix:
        description: build_charm.yaml `artifact-prefix` output
        value: ${{ jobs.build.outputs.artifact-prefix }}

jobs:
  lint:
    name: Lint
    uses: canonical/data-platform-workflows/.github/workflows/lint.yaml@v29.0.0

  unit-test:
    name: Unit test charm
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run tests
        run: tox run -e unit
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5

  lib-check:
    name: Check libraries
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          # Workaround for https://github.com/canonical/charmcraft/issues/1389#issuecomment-1880921728
          touch requirements.txt
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@2.6.3
        with:
          charmcraft-channel: latest/candidate  # TODO: remove after charmcraft 3.3 stable release
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          use-labels: false
          fail-build: ${{ github.event_name == 'pull_request' }}

  build:
    name: Build charm
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v29.0.0
    with:
      charmcraft-snap-channel: latest/candidate  # TODO: remove after charmcraft 3.3 stable release

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        juju:
          - agent: 2.9.51  # renovate: juju-agent-pin-minor
            libjuju: ^2
            allure_on_amd64: false
          - agent: 3.6.1  # renovate: juju-agent-pin-minor
            allure_on_amd64: true
        architecture:
          - amd64
        include:
          - juju:
              agent: 3.6.1  # renovate: juju-agent-pin-minor
              allure_on_amd64: true
            architecture: arm64
    name: Integration | ${{ matrix.juju.agent }} | ${{ matrix.architecture }}
    needs:
      - lint
      - unit-test
      - build
    uses: canonical/data-platform-workflows/.github/workflows/integration_test_charm.yaml@v29.0.0
    with:
      artifact-prefix: ${{ needs.build.outputs.artifact-prefix }}
      architecture: ${{ matrix.architecture }}
      cloud: microk8s
      microk8s-snap-channel: 1.31-strict/stable  # renovate: latest microk8s
      juju-agent-version: ${{ matrix.juju.agent }}
      libjuju-version-constraint: ${{ matrix.juju.libjuju }}
      _beta_allure_report: ${{ matrix.juju.allure_on_amd64 && matrix.architecture == 'amd64' }}
    secrets:
      # GitHub appears to redact each line of a multi-line secret
      # Avoid putting `{` or `}` on a line by itself so that it doesn't get redacted in logs
      integration-test: |
        { "AWS_ACCESS_KEY": "${{ secrets.AWS_ACCESS_KEY }}",
          "AWS_SECRET_KEY": "${{ secrets.AWS_SECRET_KEY }}",
          "GCP_ACCESS_KEY": "${{ secrets.GCP_ACCESS_KEY }}",
          "GCP_SECRET_KEY": "${{ secrets.GCP_SECRET_KEY }}", }
    permissions:
      contents: write  # Needed for Allure Report beta
