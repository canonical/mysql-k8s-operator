# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tool.poetry]
package-mode = false
requires-poetry = ">=2.0.0"

[tool.poetry.dependencies]
python = "^3.10"
ops = "^2.23.1"
lightkube = "^0.17.2"
tenacity = "^8.5.0"
boto3 = "^1.40.60"
jinja2 = "^3.1.6"
pyyaml = "^6.0.3"

[tool.poetry.group.charm-libs.dependencies]
# data_platform_libs/v0/data_interfaces.py
ops = ">=2.0.0"
# data_platform_libs/v0/upgrade.py
poetry-core = "*"
# data_platform_libs/v0/upgrade.py requires pydantic ^1.10
# data_platform_libs/v0/data_models.py requires pydantic ^1.10
# tempo_coordinator_k8s/v0/charm_tracing.py requires pydantic
pydantic = "^1.10"
# tls_certificates_interface/v1/tls_certificates.py
# tls_certificates lib uses a feature only available in cryptography >=42.0.5
cryptography = ">=42.0.5"
jsonschema = "*"
# loki_k8s/v0/loki_push_api.py and prometheus_k8s/v0/prometheus_scrape.py
cosl = ">=0.0.50"
# tempo_coordinator_k8s/v0/charm_tracing.py
opentelemetry-exporter-otlp-proto-http = "1.21.0"

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
ruff = "^0.14.2"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.14.2"
codespell = "^2.4.1"
shellcheck-py = "^0.9.0.5"

[tool.poetry.group.unit.dependencies]
pytest = "^7.4.4"
pytest-mock = "^3.15.1"
coverage = { extras = ["toml"], version = "^7.11.0" }
parameterized = "^0.9.0"

[tool.poetry.group.integration.dependencies]
pytest = "^7.4.4"
pytest-operator = "^0.43.2"
juju = "^3.6.0.0"
ops = "^2.23.1"
mysql-connector-python = "~9.1.0"
tenacity = "^8.5.0"
boto3 = "^1.40.60"
pyyaml = "^6.0.3"
urllib3 = "^2.5.0"
lightkube = "^0.17.2"
kubernetes = "^27.2.0"
allure-pytest = "^2.15.0"
allure-pytest-default-results = "^0.1.3"
pytest-asyncio = "^0.26.0"
jubilant-backports = "^1.4.0"

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
markers = ["juju3", "only_with_juju_secrets", "only_without_juju_secrets"]
asyncio_mode = "auto"

# Linting tools configuration
[tool.ruff]
# preview and explicit preview are enabled for CPY001
preview = true
target-version = "py38"
src = ["src", "."]
line-length = 99

[tool.ruff.lint]
explicit-preview-rules = true
select = [
  "A",
  "E",
  "W",
  "F",
  "C",
  "N",
  "D",
  "I",
  "B",
  "CPY001",
  "RUF",
  "S",
  "SIM",
  "UP",
  "TC",
]
ignore = [
  "D107", # Ignore D107 Missing docstring in __init__
  "E501", # Ignore E501 Line too long
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "D1",
  "D417",
  # Asserts
  "B011",
  # Disable security checks for tests
  "S",
]

[tool.ruff.lint.flake8-copyright]
# Check for properly formatted copyright header in each file
author = "Canonical Ltd."
notice-rgx = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"
