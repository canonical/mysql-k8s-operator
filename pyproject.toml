# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[project]
name = "mysql-k8s-operator"
version = "0.1.0"
description = "Kubernetes charm for MySQL following the operator framework"
readme = "README.md"
requires-python = ">=3.10"

[dependency-groups]
charm = [
    "boto3 ~= 1.28",
    "jinja2 ~= 3.1",
    "lightkube ~= 0.15",
    "ops ~= 2.15",
    "pyyaml ~= 6.0",
    "tenacity ~= 8.2",
]

libs = [
    # data_platform_libs/v0/data_interfaces.py
    "ops >=2.0.0",
    # data_platform_libs/v0/upgrade.py
    "poetry-core",
    # data_platform_libs/v0/upgrade.py requires pydantic ^1.10
    # data_platform_libs/v0/data_models.py requires pydantic ^1.10
    # tempo_coordinator_k8s/v0/charm_tracing.py requires pydantic
    "pydantic ~= 1.10",
    # loki_k8s/v0/loki_push_api.py and prometheus_k8s/v0/prometheus_scrape.py
    "cosl >= 0.0.50",
    # tempo_coordinator_k8s/v0/charm_tracing.py
    "opentelemetry-exporter-otlp-proto-http == 1.21.0",
    # tls_certificates_interface/v1/tls_certificates.py
    # tls_certificates lib uses a feature only available in cryptography >=42.0.5
    "cryptography >= 42.0.5",
    "jsonschema",
]

format = [
    "ruff ~= 0.4",
]

lint = [
    "codespell ~= 2.3",
    "ruff ~= 0.4",
    "shellcheck-py ~= 0.9",
]

unit = [
    "coverage[toml] ~= 7.2",
    "parameterized ~= 0.9",
    "pytest ~= 7.4",
    "pytest-mock ~= 3.11",
]

integration = [
    "allure-pytest ~= 2.13",
    "allure-pytest-default-results ~= 0.1",
    "boto3 ~= 1.28",
    "juju ~= 3.6",
    "kubernetes ~= 27.2",
    "lightkube ~= 0.15",
    "mysql-connector-python ~= 8.0",
    "pytest ~= 7.4",
    "pytest-asyncio ~= 0.21",
    "pytest-operator ~= 0.28",
    "pyyaml ~= 6.0",
    "ops ~= 2.15",
    "tenacity ~= 8.2",
    "urllib3 ~= 1.26",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
markers = ["juju3", "only_with_juju_secrets", "only_without_juju_secrets"]
asyncio_mode = "auto"

# Linting tools configuration
[tool.ruff]
# preview and explicit preview are enabled for CPY001
preview = true
target-version = "py38"
src = ["src", "."]
line-length = 99

[tool.ruff.lint]
explicit-preview-rules = true
select = ["A", "E", "W", "F", "C", "N", "D", "I", "CPY001"]
ignore = [
    "D107", # Ignore D107 Missing docstring in __init__
    "E501", # Ignore E501 Line too long
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D1"]

[tool.ruff.lint.flake8-copyright]
# Check for properly formatted copyright header in each file
author = "Canonical Ltd."
notice-rgx = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.uv]
no-binary = false
